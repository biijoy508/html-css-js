  typescript we can declare type, also we can avoid declaing type or namn 
  .ts is typescript compilation, 
  let getName = () => 'john'; console.log('my name is ' + getName); // t√Ωpe script annonymous function 
  class Person{
  constructor(public firstname: string , public lastname:string, private __age:number){} // in ts private varible name have underscore
  }
  }
  var p = new Person("a", "good", 6); console.log(p.firstName);
  var persons: Array<Person> = [];
persons[0] = new Person();
 
 class Employee extends person {
 lol: string;
 }
  
 interface Aperson(){
  firstName : string;
  age?: number; // ? means this varibale is optional
  increaseHeight(currentHeight : number) : void{}
 } 
 ---------------------------------------------------------------------------------
 class Person {
 constructor(public config: Aperson){} //this is a way to implement interface
 }
 var lol : Aperson = {
 firstName = "khan"; age = 10;
 }
 
 var p = new Person(lol);
 ---------------------------------------------------------------------------------
  class person implements Aperson{
  firstName : string;
  age?: number; // ? means this varibale is optional
  increaseHeight(currentHeight : number) : void{
  console.log("Here is a lol");
  }
 } 
 ----------------------------------------------------------------------------
  
{} on the left of equal sign means destruction 
say a function lol has properties age, name, height, weight, but now we only want name 
let {name} = lol();
----------------------------------------------------------
npm install typescript-g (installing typescript)
if tsconfig.json is not configured:
tsc --t ES5 main.ts (compiling typescript file in ES5 guidelines)
tsconfig.jso looks like : 
{
"compilerOptions":{
"target" : "ES5,
"module" : "commonjs",
"experimentalallocators":true
}}
------------------------------------------------------------
it is possible to install new types in ts
------------------------


  
 
